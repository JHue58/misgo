// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: record.proto

package record

import (
	_ "github.com/jhue/misgo/biz/model/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	Tag     string `protobuf:"bytes,2,opt,name=Tag,proto3" form:"tag" json:"tag,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" form:"content" json:"content,omitempty"`
	Extend  string `protobuf:"bytes,4,opt,name=Extend,proto3" form:"extend" json:"extend,omitempty"`
}

func (x *RecordReq) Reset() {
	*x = RecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordReq) ProtoMessage() {}

func (x *RecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordReq.ProtoReflect.Descriptor instead.
func (*RecordReq) Descriptor() ([]byte, []int) {
	return file_record_proto_rawDescGZIP(), []int{0}
}

func (x *RecordReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *RecordReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *RecordReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RecordReq) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

type RecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty" form:"Content" query:"Content"`
}

func (x *RecordResp) Reset() {
	*x = RecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResp) ProtoMessage() {}

func (x *RecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResp.ProtoReflect.Descriptor instead.
func (*RecordResp) Descriptor() ([]byte, []int) {
	return file_record_proto_rawDescGZIP(), []int{1}
}

func (x *RecordResp) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RecordGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID   string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	Tag   string `protobuf:"bytes,2,opt,name=Tag,proto3" form:"tag" json:"tag,omitempty"`
	Start int64  `protobuf:"varint,3,opt,name=Start,proto3" form:"start" json:"start,omitempty"`
	Count int64  `protobuf:"varint,4,opt,name=Count,proto3" form:"count" json:"count,omitempty"`
}

func (x *RecordGetReq) Reset() {
	*x = RecordGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGetReq) ProtoMessage() {}

func (x *RecordGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGetReq.ProtoReflect.Descriptor instead.
func (*RecordGetReq) Descriptor() ([]byte, []int) {
	return file_record_proto_rawDescGZIP(), []int{2}
}

func (x *RecordGetReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *RecordGetReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *RecordGetReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RecordGetReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag     string `protobuf:"bytes,1,opt,name=Tag,proto3" form:"tag" json:"tag,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" form:"content" json:"content,omitempty"`
	Extend  string `protobuf:"bytes,3,opt,name=Extend,proto3" form:"extend" json:"extend,omitempty"`
	Time    int64  `protobuf:"varint,4,opt,name=Time,proto3" form:"time" json:"time,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_record_proto_rawDescGZIP(), []int{3}
}

func (x *Record) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Record) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Record) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *Record) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type RecordGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*Record `protobuf:"bytes,1,rep,name=Records,proto3" json:"Records,omitempty" form:"Records" query:"Records"`
}

func (x *RecordGetResp) Reset() {
	*x = RecordGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGetResp) ProtoMessage() {}

func (x *RecordGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGetResp.ProtoReflect.Descriptor instead.
func (*RecordGetResp) Descriptor() ([]byte, []int) {
	return file_record_proto_rawDescGZIP(), []int{4}
}

func (x *RecordGetResp) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

var File_record_proto protoreflect.FileDescriptor

var file_record_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb,
	0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03, 0x54, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x74, 0x61, 0x67,
	0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb,
	0x18, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x22, 0x26, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64, 0x52,
	0x03, 0x55, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x74, 0x61, 0x67, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x1f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09,
	0xca, 0xbb, 0x18, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x09, 0xca, 0xbb, 0x18, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x03,
	0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x74,
	0x61, 0x67, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x39, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x28, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x32, 0x9a, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x11, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0e,
	0xda, 0xc1, 0x18, 0x0a, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x48,
	0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0e, 0xd2, 0xc1, 0x18, 0x0a, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x68, 0x75, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x67,
	0x6f, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_record_proto_rawDescOnce sync.Once
	file_record_proto_rawDescData = file_record_proto_rawDesc
)

func file_record_proto_rawDescGZIP() []byte {
	file_record_proto_rawDescOnce.Do(func() {
		file_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_record_proto_rawDescData)
	})
	return file_record_proto_rawDescData
}

var file_record_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_record_proto_goTypes = []interface{}{
	(*RecordReq)(nil),     // 0: record.RecordReq
	(*RecordResp)(nil),    // 1: record.RecordResp
	(*RecordGetReq)(nil),  // 2: record.RecordGetReq
	(*Record)(nil),        // 3: record.Record
	(*RecordGetResp)(nil), // 4: record.RecordGetResp
}
var file_record_proto_depIdxs = []int32{
	3, // 0: record.RecordGetResp.Records:type_name -> record.Record
	0, // 1: record.RecordService.Record:input_type -> record.RecordReq
	2, // 2: record.RecordService.RecordGet:input_type -> record.RecordGetReq
	1, // 3: record.RecordService.Record:output_type -> record.RecordResp
	4, // 4: record.RecordService.RecordGet:output_type -> record.RecordGetResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_record_proto_init() }
func file_record_proto_init() {
	if File_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_record_proto_goTypes,
		DependencyIndexes: file_record_proto_depIdxs,
		MessageInfos:      file_record_proto_msgTypes,
	}.Build()
	File_record_proto = out.File
	file_record_proto_rawDesc = nil
	file_record_proto_goTypes = nil
	file_record_proto_depIdxs = nil
}
