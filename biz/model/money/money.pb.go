// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: money.proto

package money

import (
	_ "github.com/jhue/misgo/biz/model/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string  `protobuf:"bytes,1,opt,name=Type,proto3" form:"type" json:"type,omitempty"`
	Category string  `protobuf:"bytes,2,opt,name=Category,proto3" form:"category" json:"category,omitempty"`
	Amount   float32 `protobuf:"fixed32,3,opt,name=Amount,proto3" form:"amount" json:"amount,omitempty"`
	Note     string  `protobuf:"bytes,4,opt,name=Note,proto3" form:"note" json:"note,omitempty"`
	Time     int64   `protobuf:"varint,5,opt,name=Time,proto3" form:"time" json:"time,omitempty"`
	ID       int64   `protobuf:"varint,6,opt,name=ID,proto3" form:"id" json:"id,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Transaction) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Transaction) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Transaction) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Transaction) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type TransactionView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总共
	Count int64 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty" form:"Count" query:"Count"`
	// 收入Count
	IncomeCount int64 `protobuf:"varint,2,opt,name=IncomeCount,proto3" json:"IncomeCount,omitempty" form:"IncomeCount" query:"IncomeCount"`
	// 支出Count
	ExpenditureCount int64 `protobuf:"varint,3,opt,name=ExpenditureCount,proto3" json:"ExpenditureCount,omitempty" form:"ExpenditureCount" query:"ExpenditureCount"`
	// 总收入
	Income float32 `protobuf:"fixed32,4,opt,name=Income,proto3" json:"Income,omitempty" form:"Income" query:"Income"`
	// 总支出
	Expenditure float32 `protobuf:"fixed32,5,opt,name=Expenditure,proto3" json:"Expenditure,omitempty" form:"Expenditure" query:"Expenditure"`
	// 最大收入
	LargestIncome *Transaction `protobuf:"bytes,6,opt,name=LargestIncome,proto3" json:"LargestIncome,omitempty" form:"LargestIncome" query:"LargestIncome"`
	// 最大支出
	LargestExpenditure *Transaction `protobuf:"bytes,7,opt,name=LargestExpenditure,proto3" json:"LargestExpenditure,omitempty" form:"LargestExpenditure" query:"LargestExpenditure"`
}

func (x *TransactionView) Reset() {
	*x = TransactionView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionView) ProtoMessage() {}

func (x *TransactionView) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionView.ProtoReflect.Descriptor instead.
func (*TransactionView) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionView) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TransactionView) GetIncomeCount() int64 {
	if x != nil {
		return x.IncomeCount
	}
	return 0
}

func (x *TransactionView) GetExpenditureCount() int64 {
	if x != nil {
		return x.ExpenditureCount
	}
	return 0
}

func (x *TransactionView) GetIncome() float32 {
	if x != nil {
		return x.Income
	}
	return 0
}

func (x *TransactionView) GetExpenditure() float32 {
	if x != nil {
		return x.Expenditure
	}
	return 0
}

func (x *TransactionView) GetLargestIncome() *Transaction {
	if x != nil {
		return x.LargestIncome
	}
	return nil
}

func (x *TransactionView) GetLargestExpenditure() *Transaction {
	if x != nil {
		return x.LargestExpenditure
	}
	return nil
}

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID            string       `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	OneTransaction *Transaction `protobuf:"bytes,2,opt,name=OneTransaction,proto3" form:"transaction" json:"transaction,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *TransactionReq) GetOneTransaction() *Transaction {
	if x != nil {
		return x.OneTransaction
	}
	return nil
}

type TransactionContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" form:"content" json:"content,omitempty"`
}

func (x *TransactionContentReq) Reset() {
	*x = TransactionContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionContentReq) ProtoMessage() {}

func (x *TransactionContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionContentReq.ProtoReflect.Descriptor instead.
func (*TransactionContentReq) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionContentReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *TransactionContentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type TransactionGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID   string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	Start int64  `protobuf:"varint,2,opt,name=Start,proto3" form:"start" json:"start,omitempty"`
	Count int64  `protobuf:"varint,3,opt,name=Count,proto3" form:"count" json:"count,omitempty"`
	// 在TimeRange非自定义时，此处不生效
	StartTime int64 `protobuf:"varint,4,opt,name=StartTime,proto3" form:"start_time" json:"start_time,omitempty"`
	EndTime   int64 `protobuf:"varint,5,opt,name=EndTime,proto3" form:"end_time" json:"end_time,omitempty"`
	// 今天,昨天,这周,上周,这个月,上个月,自定义
	TimeRange string `protobuf:"bytes,6,opt,name=TimeRange,proto3" form:"time_range" json:"time_range,omitempty"`
	// where的判断表达式
	Condition string `protobuf:"bytes,7,opt,name=Condition,proto3" form:"condition" json:"condition,omitempty"`
	// order表达式
	Order string `protobuf:"bytes,8,opt,name=Order,proto3" form:"order" json:"order,omitempty"`
}

func (x *TransactionGetReq) Reset() {
	*x = TransactionGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionGetReq) ProtoMessage() {}

func (x *TransactionGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionGetReq.ProtoReflect.Descriptor instead.
func (*TransactionGetReq) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionGetReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *TransactionGetReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TransactionGetReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TransactionGetReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TransactionGetReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TransactionGetReq) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

func (x *TransactionGetReq) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *TransactionGetReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type TransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=Transactions,proto3" json:"Transactions,omitempty" form:"Transactions" query:"Transactions"`
}

func (x *TransactionResp) Reset() {
	*x = TransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_money_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResp) ProtoMessage() {}

func (x *TransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_money_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResp.ProtoReflect.Descriptor instead.
func (*TransactionResp) Descriptor() ([]byte, []int) {
	return file_money_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionResp) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_money_proto protoreflect.FileDescriptor

var file_money_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcd, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca,
	0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x49, 0x44, 0x22,
	0xad, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x4c, 0x61,
	0x72, 0x67, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x12, 0x4c,
	0x61, 0x72, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x4c, 0x61, 0x72,
	0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x78, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x4b, 0x0a, 0x0e,
	0x4f, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x4f, 0x6e, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x15, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x25, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64,
	0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xbb, 0x18, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x0f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x32, 0xc3, 0x03, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0d, 0xda, 0xc1, 0x18, 0x09, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x61, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x15, 0xd2, 0xc1, 0x18, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0d, 0xd2, 0xc1,
	0x18, 0x09, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x51, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x0d, 0xe2, 0xc1, 0x18, 0x09, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x5a,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x18, 0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x22, 0x12, 0xd2, 0xc1, 0x18, 0x0e, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x68, 0x75, 0x65, 0x2f, 0x6d, 0x69,
	0x73, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_money_proto_rawDescOnce sync.Once
	file_money_proto_rawDescData = file_money_proto_rawDesc
)

func file_money_proto_rawDescGZIP() []byte {
	file_money_proto_rawDescOnce.Do(func() {
		file_money_proto_rawDescData = protoimpl.X.CompressGZIP(file_money_proto_rawDescData)
	})
	return file_money_proto_rawDescData
}

var file_money_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_money_proto_goTypes = []interface{}{
	(*Transaction)(nil),           // 0: money.Transaction
	(*TransactionView)(nil),       // 1: money.TransactionView
	(*TransactionReq)(nil),        // 2: money.TransactionReq
	(*TransactionContentReq)(nil), // 3: money.TransactionContentReq
	(*TransactionGetReq)(nil),     // 4: money.TransactionGetReq
	(*TransactionResp)(nil),       // 5: money.TransactionResp
}
var file_money_proto_depIdxs = []int32{
	0, // 0: money.TransactionView.LargestIncome:type_name -> money.Transaction
	0, // 1: money.TransactionView.LargestExpenditure:type_name -> money.Transaction
	0, // 2: money.TransactionReq.OneTransaction:type_name -> money.Transaction
	0, // 3: money.TransactionResp.Transactions:type_name -> money.Transaction
	2, // 4: money.MoneyService.TransactionPut:input_type -> money.TransactionReq
	3, // 5: money.MoneyService.TransactionContent:input_type -> money.TransactionContentReq
	4, // 6: money.MoneyService.TransactionGet:input_type -> money.TransactionGetReq
	2, // 7: money.MoneyService.TransactionDelete:input_type -> money.TransactionReq
	4, // 8: money.MoneyService.TransactionGetView:input_type -> money.TransactionGetReq
	5, // 9: money.MoneyService.TransactionPut:output_type -> money.TransactionResp
	5, // 10: money.MoneyService.TransactionContent:output_type -> money.TransactionResp
	5, // 11: money.MoneyService.TransactionGet:output_type -> money.TransactionResp
	5, // 12: money.MoneyService.TransactionDelete:output_type -> money.TransactionResp
	1, // 13: money.MoneyService.TransactionGetView:output_type -> money.TransactionView
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_money_proto_init() }
func file_money_proto_init() {
	if File_money_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_money_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_money_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_money_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_money_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_money_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_money_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_money_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_money_proto_goTypes,
		DependencyIndexes: file_money_proto_depIdxs,
		MessageInfos:      file_money_proto_msgTypes,
	}.Build()
	File_money_proto = out.File
	file_money_proto_rawDesc = nil
	file_money_proto_goTypes = nil
	file_money_proto_depIdxs = nil
}
