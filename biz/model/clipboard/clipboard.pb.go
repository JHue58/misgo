// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: clipboard.proto

package clipboard

import (
	_ "github.com/jhue/misgo/biz/model/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClipType int32

const (
	ClipType_TEXT_TYPE ClipType = 0
	ClipType_FILE_TYPE ClipType = 1
)

// Enum value maps for ClipType.
var (
	ClipType_name = map[int32]string{
		0: "TEXT_TYPE",
		1: "FILE_TYPE",
	}
	ClipType_value = map[string]int32{
		"TEXT_TYPE": 0,
		"FILE_TYPE": 1,
	}
)

func (x ClipType) Enum() *ClipType {
	p := new(ClipType)
	*p = x
	return p
}

func (x ClipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClipType) Descriptor() protoreflect.EnumDescriptor {
	return file_clipboard_proto_enumTypes[0].Descriptor()
}

func (ClipType) Type() protoreflect.EnumType {
	return &file_clipboard_proto_enumTypes[0]
}

func (x ClipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClipType.Descriptor instead.
func (ClipType) EnumDescriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{0}
}

type Clip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ClipType `protobuf:"varint,1,opt,name=Type,proto3,enum=clipboard.ClipType" form:"type" json:"type,omitempty"`
	Content string   `protobuf:"bytes,2,opt,name=Content,proto3" form:"content" json:"content,omitempty"`
	Hash    string   `protobuf:"bytes,3,opt,name=Hash,proto3" form:"hash" json:"hash,omitempty"`
}

func (x *Clip) Reset() {
	*x = Clip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clipboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clip) ProtoMessage() {}

func (x *Clip) ProtoReflect() protoreflect.Message {
	mi := &file_clipboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clip.ProtoReflect.Descriptor instead.
func (*Clip) Descriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{0}
}

func (x *Clip) GetType() ClipType {
	if x != nil {
		return x.Type
	}
	return ClipType_TEXT_TYPE
}

func (x *Clip) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Clip) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ClipReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	OneClip *Clip  `protobuf:"bytes,2,opt,name=OneClip,proto3" form:"clip" json:"clip,omitempty"`
}

func (x *ClipReq) Reset() {
	*x = ClipReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clipboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipReq) ProtoMessage() {}

func (x *ClipReq) ProtoReflect() protoreflect.Message {
	mi := &file_clipboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipReq.ProtoReflect.Descriptor instead.
func (*ClipReq) Descriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{1}
}

func (x *ClipReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *ClipReq) GetOneClip() *Clip {
	if x != nil {
		return x.OneClip
	}
	return nil
}

type ClipFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID     string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"UID,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" form:"content" json:"Content,omitempty"`
	Hash    string `protobuf:"bytes,3,opt,name=Hash,proto3" form:"hash" json:"Hash,omitempty"`
}

func (x *ClipFileReq) Reset() {
	*x = ClipFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clipboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipFileReq) ProtoMessage() {}

func (x *ClipFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_clipboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipFileReq.ProtoReflect.Descriptor instead.
func (*ClipFileReq) Descriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{2}
}

func (x *ClipFileReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *ClipFileReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ClipFileReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ClipGetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID   string `protobuf:"bytes,1,opt,name=UID,proto3" form:"uid" json:"uid,omitempty"`
	Start int64  `protobuf:"varint,2,opt,name=Start,proto3" form:"start" json:"start,omitempty"`
	Count int64  `protobuf:"varint,3,opt,name=Count,proto3" form:"count" json:"count,omitempty"`
}

func (x *ClipGetReq) Reset() {
	*x = ClipGetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clipboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipGetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipGetReq) ProtoMessage() {}

func (x *ClipGetReq) ProtoReflect() protoreflect.Message {
	mi := &file_clipboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipGetReq.ProtoReflect.Descriptor instead.
func (*ClipGetReq) Descriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{3}
}

func (x *ClipGetReq) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *ClipGetReq) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ClipGetReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ClipResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string  `protobuf:"bytes,1,opt,name=Message,proto3" form:"Message" json:"Message,omitempty" query:"Message"`
	Board   []*Clip `protobuf:"bytes,2,rep,name=Board,proto3" form:"Board" json:"Board,omitempty" query:"Board"`
}

func (x *ClipResp) Reset() {
	*x = ClipResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clipboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipResp) ProtoMessage() {}

func (x *ClipResp) ProtoReflect() protoreflect.Message {
	mi := &file_clipboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipResp.ProtoReflect.Descriptor instead.
func (*ClipResp) Descriptor() ([]byte, []int) {
	return file_clipboard_proto_rawDescGZIP(), []int{4}
}

func (x *ClipResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClipResp) GetBoard() []*Clip {
	if x != nil {
		return x.Board
	}
	return nil
}

var File_clipboard_proto protoreflect.FileDescriptor

var file_clipboard_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x09, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x04, 0x43, 0x6c, 0x69, 0x70, 0x12,
	0x31, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x59, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xca, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x33, 0x0a,
	0x07, 0x4f, 0x6e, 0x65, 0x43, 0x6c, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x42,
	0x08, 0xca, 0xbb, 0x18, 0x04, 0x63, 0x6c, 0x69, 0x70, 0x52, 0x07, 0x4f, 0x6e, 0x65, 0x43, 0x6c,
	0x69, 0x70, 0x22, 0x6d, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xe2, 0xbb, 0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe2,
	0xbb, 0x18, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xe2, 0xbb, 0x18, 0x04, 0x68, 0x61, 0x73, 0x68, 0x52, 0x04, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x69, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xca, 0xbb,
	0x18, 0x03, 0x75, 0x69, 0x64, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x08,
	0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c,
	0x69, 0x70, 0x52, 0x05, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x2a, 0x28, 0x0a, 0x08, 0x43, 0x6c, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0x01, 0x32, 0xdb, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x70, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x70,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x11, 0xd2, 0xc1, 0x18, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x70, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x50, 0x75, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x11, 0xda, 0xc1, 0x18, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x53, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x70, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x16, 0xd2, 0xc1, 0x18, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x70,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x63,
	0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0xda, 0xc1, 0x18, 0x12, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x68, 0x75, 0x65, 0x2f, 0x6d, 0x69, 0x73, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clipboard_proto_rawDescOnce sync.Once
	file_clipboard_proto_rawDescData = file_clipboard_proto_rawDesc
)

func file_clipboard_proto_rawDescGZIP() []byte {
	file_clipboard_proto_rawDescOnce.Do(func() {
		file_clipboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_clipboard_proto_rawDescData)
	})
	return file_clipboard_proto_rawDescData
}

var file_clipboard_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_clipboard_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_clipboard_proto_goTypes = []interface{}{
	(ClipType)(0),       // 0: clipboard.ClipType
	(*Clip)(nil),        // 1: clipboard.Clip
	(*ClipReq)(nil),     // 2: clipboard.ClipReq
	(*ClipFileReq)(nil), // 3: clipboard.ClipFileReq
	(*ClipGetReq)(nil),  // 4: clipboard.ClipGetReq
	(*ClipResp)(nil),    // 5: clipboard.ClipResp
}
var file_clipboard_proto_depIdxs = []int32{
	0, // 0: clipboard.Clip.Type:type_name -> clipboard.ClipType
	1, // 1: clipboard.ClipReq.OneClip:type_name -> clipboard.Clip
	1, // 2: clipboard.ClipResp.Board:type_name -> clipboard.Clip
	4, // 3: clipboard.ClipBoardService.ClipBoardGet:input_type -> clipboard.ClipGetReq
	2, // 4: clipboard.ClipBoardService.ClipBoardPut:input_type -> clipboard.ClipReq
	2, // 5: clipboard.ClipBoardService.ClipBoardFileGet:input_type -> clipboard.ClipReq
	3, // 6: clipboard.ClipBoardService.ClipBoardFilePut:input_type -> clipboard.ClipFileReq
	5, // 7: clipboard.ClipBoardService.ClipBoardGet:output_type -> clipboard.ClipResp
	5, // 8: clipboard.ClipBoardService.ClipBoardPut:output_type -> clipboard.ClipResp
	5, // 9: clipboard.ClipBoardService.ClipBoardFileGet:output_type -> clipboard.ClipResp
	5, // 10: clipboard.ClipBoardService.ClipBoardFilePut:output_type -> clipboard.ClipResp
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_clipboard_proto_init() }
func file_clipboard_proto_init() {
	if File_clipboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clipboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clipboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clipboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clipboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipGetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clipboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clipboard_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clipboard_proto_goTypes,
		DependencyIndexes: file_clipboard_proto_depIdxs,
		EnumInfos:         file_clipboard_proto_enumTypes,
		MessageInfos:      file_clipboard_proto_msgTypes,
	}.Build()
	File_clipboard_proto = out.File
	file_clipboard_proto_rawDesc = nil
	file_clipboard_proto_goTypes = nil
	file_clipboard_proto_depIdxs = nil
}
